// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elettronica.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Elettronica {

  /// <summary>Holder for reflection information generated from elettronica.proto</summary>
  public static partial class ElettronicaReflection {

    #region Descriptor
    /// <summary>File descriptor for elettronica.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ElettronicaReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFlbGV0dHJvbmljYS5wcm90bxILZWxldHRyb25pY2EiFwoFRXJyb3ISDgoG",
            "ZXJyb3JlGAEgASgFIhUKBFN0b3ASDQoFZmVybWEYASABKAgiHQoIUG9zaXpp",
            "b24SEQoJcG9zaXppb25lGAEgASgFIhgKBlNjYXJ0bxIOCgZzY2FydGEYASAB",
            "KAgyPgoHQWxsYXJtZRIzCghzZXRFcnJvchISLmVsZXR0cm9uaWNhLkVycm9y",
            "GhEuZWxldHRyb25pY2EuU3RvcCIAMk0KD1NlbGV6aW9uYUZydXR0bxI6Cgpn",
            "ZXRBbmFsaXNpEhUuZWxldHRyb25pY2EuUG9zaXppb24aEy5lbGV0dHJvbmlj",
            "YS5TY2FydG8iAGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Elettronica.Error), global::Elettronica.Error.Parser, new[]{ "Errore" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Elettronica.Stop), global::Elettronica.Stop.Parser, new[]{ "Ferma" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Elettronica.Posizion), global::Elettronica.Posizion.Parser, new[]{ "Posizione" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Elettronica.Scarto), global::Elettronica.Scarto.Parser, new[]{ "Scarta" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Error : pb::IMessage<Error> {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Elettronica.ElettronicaReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      errore_ = other.errore_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "errore" field.</summary>
    public const int ErroreFieldNumber = 1;
    private int errore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Errore {
      get { return errore_; }
      set {
        errore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Errore != other.Errore) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Errore != 0) hash ^= Errore.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Errore != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errore);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Errore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Errore);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.Errore != 0) {
        Errore = other.Errore;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Errore = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Stop : pb::IMessage<Stop> {
    private static readonly pb::MessageParser<Stop> _parser = new pb::MessageParser<Stop>(() => new Stop());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Stop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Elettronica.ElettronicaReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stop(Stop other) : this() {
      ferma_ = other.ferma_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Stop Clone() {
      return new Stop(this);
    }

    /// <summary>Field number for the "ferma" field.</summary>
    public const int FermaFieldNumber = 1;
    private bool ferma_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ferma {
      get { return ferma_; }
      set {
        ferma_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Stop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Stop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ferma != other.Ferma) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Ferma != false) hash ^= Ferma.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Ferma != false) {
        output.WriteRawTag(8);
        output.WriteBool(Ferma);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Ferma != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Stop other) {
      if (other == null) {
        return;
      }
      if (other.Ferma != false) {
        Ferma = other.Ferma;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Ferma = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Posizion : pb::IMessage<Posizion> {
    private static readonly pb::MessageParser<Posizion> _parser = new pb::MessageParser<Posizion>(() => new Posizion());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Posizion> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Elettronica.ElettronicaReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Posizion() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Posizion(Posizion other) : this() {
      posizione_ = other.posizione_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Posizion Clone() {
      return new Posizion(this);
    }

    /// <summary>Field number for the "posizione" field.</summary>
    public const int PosizioneFieldNumber = 1;
    private int posizione_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Posizione {
      get { return posizione_; }
      set {
        posizione_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Posizion);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Posizion other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Posizione != other.Posizione) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Posizione != 0) hash ^= Posizione.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Posizione != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Posizione);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Posizione != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Posizione);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Posizion other) {
      if (other == null) {
        return;
      }
      if (other.Posizione != 0) {
        Posizione = other.Posizione;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Posizione = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Scarto : pb::IMessage<Scarto> {
    private static readonly pb::MessageParser<Scarto> _parser = new pb::MessageParser<Scarto>(() => new Scarto());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scarto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Elettronica.ElettronicaReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scarto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scarto(Scarto other) : this() {
      scarta_ = other.scarta_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scarto Clone() {
      return new Scarto(this);
    }

    /// <summary>Field number for the "scarta" field.</summary>
    public const int ScartaFieldNumber = 1;
    private bool scarta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Scarta {
      get { return scarta_; }
      set {
        scarta_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scarto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scarto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Scarta != other.Scarta) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Scarta != false) hash ^= Scarta.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Scarta != false) {
        output.WriteRawTag(8);
        output.WriteBool(Scarta);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Scarta != false) {
        size += 1 + 1;
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scarto other) {
      if (other == null) {
        return;
      }
      if (other.Scarta != false) {
        Scarta = other.Scarta;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Scarta = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
