// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: machinevision.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "machinevision.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace machinevision {
class DatiFruttoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DatiFrutto> {
} _DatiFrutto_default_instance_;
class StatoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Stato> {
} _Stato_default_instance_;

namespace protobuf_machinevision_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatiFrutto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatiFrutto, tipofrutto_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatiFrutto, diametro_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatiFrutto, colore_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatiFrutto, qualita_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DatiFrutto, soft_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stato, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stato, stato_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(DatiFrutto)},
  { 10, -1, sizeof(Stato)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_DatiFrutto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Stato_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "machinevision.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

}  // namespace

void TableStruct::Shutdown() {
  _DatiFrutto_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Stato_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _DatiFrutto_default_instance_.DefaultConstruct();
  _Stato_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\023machinevision.proto\022\rmachinevision\"a\n\n"
      "DatiFrutto\022\022\n\ntipoFrutto\030\001 \001(\005\022\020\n\010diamet"
      "ro\030\002 \001(\005\022\016\n\006colore\030\003 \001(\005\022\017\n\007qualita\030\004 \001("
      "\005\022\014\n\004soft\030\005 \001(\005\"\026\n\005Stato\022\r\n\005stato\030\001 \001(\0102"
      "Y\n\rAnalisiFrutta\022H\n\023setFruttoAnalizzato\022"
      "\031.machinevision.DatiFrutto\032\024.machinevisi"
      "on.Stato\"\000b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 258);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "machinevision.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_machinevision_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DatiFrutto::kTipoFruttoFieldNumber;
const int DatiFrutto::kDiametroFieldNumber;
const int DatiFrutto::kColoreFieldNumber;
const int DatiFrutto::kQualitaFieldNumber;
const int DatiFrutto::kSoftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DatiFrutto::DatiFrutto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_machinevision_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:machinevision.DatiFrutto)
}
DatiFrutto::DatiFrutto(const DatiFrutto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&tipofrutto_, &from.tipofrutto_,
    reinterpret_cast<char*>(&soft_) -
    reinterpret_cast<char*>(&tipofrutto_) + sizeof(soft_));
  // @@protoc_insertion_point(copy_constructor:machinevision.DatiFrutto)
}

void DatiFrutto::SharedCtor() {
  ::memset(&tipofrutto_, 0, reinterpret_cast<char*>(&soft_) -
    reinterpret_cast<char*>(&tipofrutto_) + sizeof(soft_));
  _cached_size_ = 0;
}

DatiFrutto::~DatiFrutto() {
  // @@protoc_insertion_point(destructor:machinevision.DatiFrutto)
  SharedDtor();
}

void DatiFrutto::SharedDtor() {
}

void DatiFrutto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DatiFrutto::descriptor() {
  protobuf_machinevision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_machinevision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DatiFrutto& DatiFrutto::default_instance() {
  protobuf_machinevision_2eproto::InitDefaults();
  return *internal_default_instance();
}

DatiFrutto* DatiFrutto::New(::google::protobuf::Arena* arena) const {
  DatiFrutto* n = new DatiFrutto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DatiFrutto::Clear() {
// @@protoc_insertion_point(message_clear_start:machinevision.DatiFrutto)
  ::memset(&tipofrutto_, 0, reinterpret_cast<char*>(&soft_) -
    reinterpret_cast<char*>(&tipofrutto_) + sizeof(soft_));
}

bool DatiFrutto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:machinevision.DatiFrutto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 tipoFrutto = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &tipofrutto_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 diametro = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &diametro_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 colore = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &colore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 qualita = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &qualita_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 soft = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &soft_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:machinevision.DatiFrutto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:machinevision.DatiFrutto)
  return false;
#undef DO_
}

void DatiFrutto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:machinevision.DatiFrutto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tipoFrutto = 1;
  if (this->tipofrutto() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->tipofrutto(), output);
  }

  // int32 diametro = 2;
  if (this->diametro() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->diametro(), output);
  }

  // int32 colore = 3;
  if (this->colore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->colore(), output);
  }

  // int32 qualita = 4;
  if (this->qualita() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->qualita(), output);
  }

  // int32 soft = 5;
  if (this->soft() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->soft(), output);
  }

  // @@protoc_insertion_point(serialize_end:machinevision.DatiFrutto)
}

::google::protobuf::uint8* DatiFrutto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:machinevision.DatiFrutto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 tipoFrutto = 1;
  if (this->tipofrutto() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->tipofrutto(), target);
  }

  // int32 diametro = 2;
  if (this->diametro() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->diametro(), target);
  }

  // int32 colore = 3;
  if (this->colore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->colore(), target);
  }

  // int32 qualita = 4;
  if (this->qualita() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->qualita(), target);
  }

  // int32 soft = 5;
  if (this->soft() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->soft(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:machinevision.DatiFrutto)
  return target;
}

size_t DatiFrutto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:machinevision.DatiFrutto)
  size_t total_size = 0;

  // int32 tipoFrutto = 1;
  if (this->tipofrutto() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->tipofrutto());
  }

  // int32 diametro = 2;
  if (this->diametro() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->diametro());
  }

  // int32 colore = 3;
  if (this->colore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->colore());
  }

  // int32 qualita = 4;
  if (this->qualita() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->qualita());
  }

  // int32 soft = 5;
  if (this->soft() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->soft());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DatiFrutto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:machinevision.DatiFrutto)
  GOOGLE_DCHECK_NE(&from, this);
  const DatiFrutto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DatiFrutto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:machinevision.DatiFrutto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:machinevision.DatiFrutto)
    MergeFrom(*source);
  }
}

void DatiFrutto::MergeFrom(const DatiFrutto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:machinevision.DatiFrutto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tipofrutto() != 0) {
    set_tipofrutto(from.tipofrutto());
  }
  if (from.diametro() != 0) {
    set_diametro(from.diametro());
  }
  if (from.colore() != 0) {
    set_colore(from.colore());
  }
  if (from.qualita() != 0) {
    set_qualita(from.qualita());
  }
  if (from.soft() != 0) {
    set_soft(from.soft());
  }
}

void DatiFrutto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:machinevision.DatiFrutto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DatiFrutto::CopyFrom(const DatiFrutto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:machinevision.DatiFrutto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DatiFrutto::IsInitialized() const {
  return true;
}

void DatiFrutto::Swap(DatiFrutto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DatiFrutto::InternalSwap(DatiFrutto* other) {
  std::swap(tipofrutto_, other->tipofrutto_);
  std::swap(diametro_, other->diametro_);
  std::swap(colore_, other->colore_);
  std::swap(qualita_, other->qualita_);
  std::swap(soft_, other->soft_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DatiFrutto::GetMetadata() const {
  protobuf_machinevision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_machinevision_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DatiFrutto

// int32 tipoFrutto = 1;
void DatiFrutto::clear_tipofrutto() {
  tipofrutto_ = 0;
}
::google::protobuf::int32 DatiFrutto::tipofrutto() const {
  // @@protoc_insertion_point(field_get:machinevision.DatiFrutto.tipoFrutto)
  return tipofrutto_;
}
void DatiFrutto::set_tipofrutto(::google::protobuf::int32 value) {
  
  tipofrutto_ = value;
  // @@protoc_insertion_point(field_set:machinevision.DatiFrutto.tipoFrutto)
}

// int32 diametro = 2;
void DatiFrutto::clear_diametro() {
  diametro_ = 0;
}
::google::protobuf::int32 DatiFrutto::diametro() const {
  // @@protoc_insertion_point(field_get:machinevision.DatiFrutto.diametro)
  return diametro_;
}
void DatiFrutto::set_diametro(::google::protobuf::int32 value) {
  
  diametro_ = value;
  // @@protoc_insertion_point(field_set:machinevision.DatiFrutto.diametro)
}

// int32 colore = 3;
void DatiFrutto::clear_colore() {
  colore_ = 0;
}
::google::protobuf::int32 DatiFrutto::colore() const {
  // @@protoc_insertion_point(field_get:machinevision.DatiFrutto.colore)
  return colore_;
}
void DatiFrutto::set_colore(::google::protobuf::int32 value) {
  
  colore_ = value;
  // @@protoc_insertion_point(field_set:machinevision.DatiFrutto.colore)
}

// int32 qualita = 4;
void DatiFrutto::clear_qualita() {
  qualita_ = 0;
}
::google::protobuf::int32 DatiFrutto::qualita() const {
  // @@protoc_insertion_point(field_get:machinevision.DatiFrutto.qualita)
  return qualita_;
}
void DatiFrutto::set_qualita(::google::protobuf::int32 value) {
  
  qualita_ = value;
  // @@protoc_insertion_point(field_set:machinevision.DatiFrutto.qualita)
}

// int32 soft = 5;
void DatiFrutto::clear_soft() {
  soft_ = 0;
}
::google::protobuf::int32 DatiFrutto::soft() const {
  // @@protoc_insertion_point(field_get:machinevision.DatiFrutto.soft)
  return soft_;
}
void DatiFrutto::set_soft(::google::protobuf::int32 value) {
  
  soft_ = value;
  // @@protoc_insertion_point(field_set:machinevision.DatiFrutto.soft)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stato::kStatoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stato::Stato()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_machinevision_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:machinevision.Stato)
}
Stato::Stato(const Stato& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stato_ = from.stato_;
  // @@protoc_insertion_point(copy_constructor:machinevision.Stato)
}

void Stato::SharedCtor() {
  stato_ = false;
  _cached_size_ = 0;
}

Stato::~Stato() {
  // @@protoc_insertion_point(destructor:machinevision.Stato)
  SharedDtor();
}

void Stato::SharedDtor() {
}

void Stato::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stato::descriptor() {
  protobuf_machinevision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_machinevision_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stato& Stato::default_instance() {
  protobuf_machinevision_2eproto::InitDefaults();
  return *internal_default_instance();
}

Stato* Stato::New(::google::protobuf::Arena* arena) const {
  Stato* n = new Stato;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stato::Clear() {
// @@protoc_insertion_point(message_clear_start:machinevision.Stato)
  stato_ = false;
}

bool Stato::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:machinevision.Stato)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool stato = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stato_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:machinevision.Stato)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:machinevision.Stato)
  return false;
#undef DO_
}

void Stato::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:machinevision.Stato)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool stato = 1;
  if (this->stato() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->stato(), output);
  }

  // @@protoc_insertion_point(serialize_end:machinevision.Stato)
}

::google::protobuf::uint8* Stato::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:machinevision.Stato)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool stato = 1;
  if (this->stato() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->stato(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:machinevision.Stato)
  return target;
}

size_t Stato::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:machinevision.Stato)
  size_t total_size = 0;

  // bool stato = 1;
  if (this->stato() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stato::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:machinevision.Stato)
  GOOGLE_DCHECK_NE(&from, this);
  const Stato* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stato>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:machinevision.Stato)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:machinevision.Stato)
    MergeFrom(*source);
  }
}

void Stato::MergeFrom(const Stato& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:machinevision.Stato)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stato() != 0) {
    set_stato(from.stato());
  }
}

void Stato::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:machinevision.Stato)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stato::CopyFrom(const Stato& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:machinevision.Stato)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stato::IsInitialized() const {
  return true;
}

void Stato::Swap(Stato* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stato::InternalSwap(Stato* other) {
  std::swap(stato_, other->stato_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stato::GetMetadata() const {
  protobuf_machinevision_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_machinevision_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Stato

// bool stato = 1;
void Stato::clear_stato() {
  stato_ = false;
}
bool Stato::stato() const {
  // @@protoc_insertion_point(field_get:machinevision.Stato.stato)
  return stato_;
}
void Stato::set_stato(bool value) {
  
  stato_ = value;
  // @@protoc_insertion_point(field_set:machinevision.Stato.stato)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace machinevision

// @@protoc_insertion_point(global_scope)
