// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: machinevision.proto

#ifndef PROTOBUF_machinevision_2eproto__INCLUDED
#define PROTOBUF_machinevision_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace machinevision {
class DatiFrutto;
class DatiFruttoDefaultTypeInternal;
extern DatiFruttoDefaultTypeInternal _DatiFrutto_default_instance_;
class Stato;
class StatoDefaultTypeInternal;
extern StatoDefaultTypeInternal _Stato_default_instance_;
}  // namespace machinevision

namespace machinevision {

namespace protobuf_machinevision_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_machinevision_2eproto

// ===================================================================

class DatiFrutto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:machinevision.DatiFrutto) */ {
 public:
  DatiFrutto();
  virtual ~DatiFrutto();

  DatiFrutto(const DatiFrutto& from);

  inline DatiFrutto& operator=(const DatiFrutto& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DatiFrutto& default_instance();

  static inline const DatiFrutto* internal_default_instance() {
    return reinterpret_cast<const DatiFrutto*>(
               &_DatiFrutto_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(DatiFrutto* other);

  // implements Message ----------------------------------------------

  inline DatiFrutto* New() const PROTOBUF_FINAL { return New(NULL); }

  DatiFrutto* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DatiFrutto& from);
  void MergeFrom(const DatiFrutto& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DatiFrutto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 tipoFrutto = 1;
  void clear_tipofrutto();
  static const int kTipoFruttoFieldNumber = 1;
  ::google::protobuf::int32 tipofrutto() const;
  void set_tipofrutto(::google::protobuf::int32 value);

  // int32 diametro = 2;
  void clear_diametro();
  static const int kDiametroFieldNumber = 2;
  ::google::protobuf::int32 diametro() const;
  void set_diametro(::google::protobuf::int32 value);

  // int32 colore = 3;
  void clear_colore();
  static const int kColoreFieldNumber = 3;
  ::google::protobuf::int32 colore() const;
  void set_colore(::google::protobuf::int32 value);

  // int32 qualita = 4;
  void clear_qualita();
  static const int kQualitaFieldNumber = 4;
  ::google::protobuf::int32 qualita() const;
  void set_qualita(::google::protobuf::int32 value);

  // int32 soft = 5;
  void clear_soft();
  static const int kSoftFieldNumber = 5;
  ::google::protobuf::int32 soft() const;
  void set_soft(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:machinevision.DatiFrutto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 tipofrutto_;
  ::google::protobuf::int32 diametro_;
  ::google::protobuf::int32 colore_;
  ::google::protobuf::int32 qualita_;
  ::google::protobuf::int32 soft_;
  mutable int _cached_size_;
  friend struct protobuf_machinevision_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Stato : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:machinevision.Stato) */ {
 public:
  Stato();
  virtual ~Stato();

  Stato(const Stato& from);

  inline Stato& operator=(const Stato& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Stato& default_instance();

  static inline const Stato* internal_default_instance() {
    return reinterpret_cast<const Stato*>(
               &_Stato_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Stato* other);

  // implements Message ----------------------------------------------

  inline Stato* New() const PROTOBUF_FINAL { return New(NULL); }

  Stato* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stato& from);
  void MergeFrom(const Stato& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stato* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool stato = 1;
  void clear_stato();
  static const int kStatoFieldNumber = 1;
  bool stato() const;
  void set_stato(bool value);

  // @@protoc_insertion_point(class_scope:machinevision.Stato)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool stato_;
  mutable int _cached_size_;
  friend struct protobuf_machinevision_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DatiFrutto

// int32 tipoFrutto = 1;
inline void DatiFrutto::clear_tipofrutto() {
  tipofrutto_ = 0;
}
inline ::google::protobuf::int32 DatiFrutto::tipofrutto() const {
  // @@protoc_insertion_point(field_get:machinevision.DatiFrutto.tipoFrutto)
  return tipofrutto_;
}
inline void DatiFrutto::set_tipofrutto(::google::protobuf::int32 value) {
  
  tipofrutto_ = value;
  // @@protoc_insertion_point(field_set:machinevision.DatiFrutto.tipoFrutto)
}

// int32 diametro = 2;
inline void DatiFrutto::clear_diametro() {
  diametro_ = 0;
}
inline ::google::protobuf::int32 DatiFrutto::diametro() const {
  // @@protoc_insertion_point(field_get:machinevision.DatiFrutto.diametro)
  return diametro_;
}
inline void DatiFrutto::set_diametro(::google::protobuf::int32 value) {
  
  diametro_ = value;
  // @@protoc_insertion_point(field_set:machinevision.DatiFrutto.diametro)
}

// int32 colore = 3;
inline void DatiFrutto::clear_colore() {
  colore_ = 0;
}
inline ::google::protobuf::int32 DatiFrutto::colore() const {
  // @@protoc_insertion_point(field_get:machinevision.DatiFrutto.colore)
  return colore_;
}
inline void DatiFrutto::set_colore(::google::protobuf::int32 value) {
  
  colore_ = value;
  // @@protoc_insertion_point(field_set:machinevision.DatiFrutto.colore)
}

// int32 qualita = 4;
inline void DatiFrutto::clear_qualita() {
  qualita_ = 0;
}
inline ::google::protobuf::int32 DatiFrutto::qualita() const {
  // @@protoc_insertion_point(field_get:machinevision.DatiFrutto.qualita)
  return qualita_;
}
inline void DatiFrutto::set_qualita(::google::protobuf::int32 value) {
  
  qualita_ = value;
  // @@protoc_insertion_point(field_set:machinevision.DatiFrutto.qualita)
}

// int32 soft = 5;
inline void DatiFrutto::clear_soft() {
  soft_ = 0;
}
inline ::google::protobuf::int32 DatiFrutto::soft() const {
  // @@protoc_insertion_point(field_get:machinevision.DatiFrutto.soft)
  return soft_;
}
inline void DatiFrutto::set_soft(::google::protobuf::int32 value) {
  
  soft_ = value;
  // @@protoc_insertion_point(field_set:machinevision.DatiFrutto.soft)
}

// -------------------------------------------------------------------

// Stato

// bool stato = 1;
inline void Stato::clear_stato() {
  stato_ = false;
}
inline bool Stato::stato() const {
  // @@protoc_insertion_point(field_get:machinevision.Stato.stato)
  return stato_;
}
inline void Stato::set_stato(bool value) {
  
  stato_ = value;
  // @@protoc_insertion_point(field_set:machinevision.Stato.stato)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace machinevision

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_machinevision_2eproto__INCLUDED
