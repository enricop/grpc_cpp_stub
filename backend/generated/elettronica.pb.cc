// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: elettronica.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "elettronica.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace elettronica {
class ErrorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Error> {
} _Error_default_instance_;
class StopDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Stop> {
} _Stop_default_instance_;
class PosizionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Posizion> {
} _Posizion_default_instance_;
class ScartoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Scarto> {
} _Scarto_default_instance_;

namespace protobuf_elettronica_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Error, errore_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stop, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Stop, ferma_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Posizion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Posizion, posizione_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scarto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Scarto, scarta_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(Error)},
  { 6, -1, sizeof(Stop)},
  { 12, -1, sizeof(Posizion)},
  { 18, -1, sizeof(Scarto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Stop_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Posizion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Scarto_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "elettronica.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _Error_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Stop_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Posizion_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Scarto_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Error_default_instance_.DefaultConstruct();
  _Stop_default_instance_.DefaultConstruct();
  _Posizion_default_instance_.DefaultConstruct();
  _Scarto_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\021elettronica.proto\022\013elettronica\"\027\n\005Erro"
      "r\022\016\n\006errore\030\001 \001(\005\"\025\n\004Stop\022\r\n\005ferma\030\001 \001(\010"
      "\"\035\n\010Posizion\022\021\n\tposizione\030\001 \001(\005\"\030\n\006Scart"
      "o\022\016\n\006scarta\030\001 \001(\0102>\n\007Allarme\0223\n\010setError"
      "\022\022.elettronica.Error\032\021.elettronica.Stop\""
      "\0002M\n\017SelezionaFrutto\022:\n\ngetAnalisi\022\025.ele"
      "ttronica.Posizion\032\023.elettronica.Scarto\"\000"
      "b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 288);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "elettronica.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_elettronica_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kErroreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_elettronica_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:elettronica.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  errore_ = from.errore_;
  // @@protoc_insertion_point(copy_constructor:elettronica.Error)
}

void Error::SharedCtor() {
  errore_ = 0;
  _cached_size_ = 0;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:elettronica.Error)
  SharedDtor();
}

void Error::SharedDtor() {
}

void Error::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  protobuf_elettronica_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_elettronica_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  protobuf_elettronica_2eproto::InitDefaults();
  return *internal_default_instance();
}

Error* Error::New(::google::protobuf::Arena* arena) const {
  Error* n = new Error;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:elettronica.Error)
  errore_ = 0;
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elettronica.Error)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 errore = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &errore_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elettronica.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elettronica.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elettronica.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errore = 1;
  if (this->errore() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->errore(), output);
  }

  // @@protoc_insertion_point(serialize_end:elettronica.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elettronica.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errore = 1;
  if (this->errore() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->errore(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:elettronica.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elettronica.Error)
  size_t total_size = 0;

  // int32 errore = 1;
  if (this->errore() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->errore());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elettronica.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elettronica.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elettronica.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elettronica.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.errore() != 0) {
    set_errore(from.errore());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elettronica.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elettronica.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  std::swap(errore_, other->errore_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_elettronica_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_elettronica_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Error

// int32 errore = 1;
void Error::clear_errore() {
  errore_ = 0;
}
::google::protobuf::int32 Error::errore() const {
  // @@protoc_insertion_point(field_get:elettronica.Error.errore)
  return errore_;
}
void Error::set_errore(::google::protobuf::int32 value) {
  
  errore_ = value;
  // @@protoc_insertion_point(field_set:elettronica.Error.errore)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stop::kFermaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stop::Stop()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_elettronica_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:elettronica.Stop)
}
Stop::Stop(const Stop& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ferma_ = from.ferma_;
  // @@protoc_insertion_point(copy_constructor:elettronica.Stop)
}

void Stop::SharedCtor() {
  ferma_ = false;
  _cached_size_ = 0;
}

Stop::~Stop() {
  // @@protoc_insertion_point(destructor:elettronica.Stop)
  SharedDtor();
}

void Stop::SharedDtor() {
}

void Stop::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stop::descriptor() {
  protobuf_elettronica_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_elettronica_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stop& Stop::default_instance() {
  protobuf_elettronica_2eproto::InitDefaults();
  return *internal_default_instance();
}

Stop* Stop::New(::google::protobuf::Arena* arena) const {
  Stop* n = new Stop;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stop::Clear() {
// @@protoc_insertion_point(message_clear_start:elettronica.Stop)
  ferma_ = false;
}

bool Stop::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elettronica.Stop)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool ferma = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ferma_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elettronica.Stop)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elettronica.Stop)
  return false;
#undef DO_
}

void Stop::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elettronica.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ferma = 1;
  if (this->ferma() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->ferma(), output);
  }

  // @@protoc_insertion_point(serialize_end:elettronica.Stop)
}

::google::protobuf::uint8* Stop::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elettronica.Stop)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool ferma = 1;
  if (this->ferma() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->ferma(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:elettronica.Stop)
  return target;
}

size_t Stop::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elettronica.Stop)
  size_t total_size = 0;

  // bool ferma = 1;
  if (this->ferma() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stop::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elettronica.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  const Stop* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stop>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elettronica.Stop)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elettronica.Stop)
    MergeFrom(*source);
  }
}

void Stop::MergeFrom(const Stop& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elettronica.Stop)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ferma() != 0) {
    set_ferma(from.ferma());
  }
}

void Stop::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elettronica.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stop::CopyFrom(const Stop& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elettronica.Stop)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stop::IsInitialized() const {
  return true;
}

void Stop::Swap(Stop* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stop::InternalSwap(Stop* other) {
  std::swap(ferma_, other->ferma_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stop::GetMetadata() const {
  protobuf_elettronica_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_elettronica_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Stop

// bool ferma = 1;
void Stop::clear_ferma() {
  ferma_ = false;
}
bool Stop::ferma() const {
  // @@protoc_insertion_point(field_get:elettronica.Stop.ferma)
  return ferma_;
}
void Stop::set_ferma(bool value) {
  
  ferma_ = value;
  // @@protoc_insertion_point(field_set:elettronica.Stop.ferma)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Posizion::kPosizioneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Posizion::Posizion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_elettronica_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:elettronica.Posizion)
}
Posizion::Posizion(const Posizion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  posizione_ = from.posizione_;
  // @@protoc_insertion_point(copy_constructor:elettronica.Posizion)
}

void Posizion::SharedCtor() {
  posizione_ = 0;
  _cached_size_ = 0;
}

Posizion::~Posizion() {
  // @@protoc_insertion_point(destructor:elettronica.Posizion)
  SharedDtor();
}

void Posizion::SharedDtor() {
}

void Posizion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Posizion::descriptor() {
  protobuf_elettronica_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_elettronica_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Posizion& Posizion::default_instance() {
  protobuf_elettronica_2eproto::InitDefaults();
  return *internal_default_instance();
}

Posizion* Posizion::New(::google::protobuf::Arena* arena) const {
  Posizion* n = new Posizion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Posizion::Clear() {
// @@protoc_insertion_point(message_clear_start:elettronica.Posizion)
  posizione_ = 0;
}

bool Posizion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elettronica.Posizion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 posizione = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &posizione_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elettronica.Posizion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elettronica.Posizion)
  return false;
#undef DO_
}

void Posizion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elettronica.Posizion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 posizione = 1;
  if (this->posizione() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->posizione(), output);
  }

  // @@protoc_insertion_point(serialize_end:elettronica.Posizion)
}

::google::protobuf::uint8* Posizion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elettronica.Posizion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 posizione = 1;
  if (this->posizione() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->posizione(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:elettronica.Posizion)
  return target;
}

size_t Posizion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elettronica.Posizion)
  size_t total_size = 0;

  // int32 posizione = 1;
  if (this->posizione() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->posizione());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Posizion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elettronica.Posizion)
  GOOGLE_DCHECK_NE(&from, this);
  const Posizion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Posizion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elettronica.Posizion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elettronica.Posizion)
    MergeFrom(*source);
  }
}

void Posizion::MergeFrom(const Posizion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elettronica.Posizion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.posizione() != 0) {
    set_posizione(from.posizione());
  }
}

void Posizion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elettronica.Posizion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Posizion::CopyFrom(const Posizion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elettronica.Posizion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Posizion::IsInitialized() const {
  return true;
}

void Posizion::Swap(Posizion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Posizion::InternalSwap(Posizion* other) {
  std::swap(posizione_, other->posizione_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Posizion::GetMetadata() const {
  protobuf_elettronica_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_elettronica_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Posizion

// int32 posizione = 1;
void Posizion::clear_posizione() {
  posizione_ = 0;
}
::google::protobuf::int32 Posizion::posizione() const {
  // @@protoc_insertion_point(field_get:elettronica.Posizion.posizione)
  return posizione_;
}
void Posizion::set_posizione(::google::protobuf::int32 value) {
  
  posizione_ = value;
  // @@protoc_insertion_point(field_set:elettronica.Posizion.posizione)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Scarto::kScartaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Scarto::Scarto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_elettronica_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:elettronica.Scarto)
}
Scarto::Scarto(const Scarto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  scarta_ = from.scarta_;
  // @@protoc_insertion_point(copy_constructor:elettronica.Scarto)
}

void Scarto::SharedCtor() {
  scarta_ = false;
  _cached_size_ = 0;
}

Scarto::~Scarto() {
  // @@protoc_insertion_point(destructor:elettronica.Scarto)
  SharedDtor();
}

void Scarto::SharedDtor() {
}

void Scarto::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Scarto::descriptor() {
  protobuf_elettronica_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_elettronica_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Scarto& Scarto::default_instance() {
  protobuf_elettronica_2eproto::InitDefaults();
  return *internal_default_instance();
}

Scarto* Scarto::New(::google::protobuf::Arena* arena) const {
  Scarto* n = new Scarto;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Scarto::Clear() {
// @@protoc_insertion_point(message_clear_start:elettronica.Scarto)
  scarta_ = false;
}

bool Scarto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:elettronica.Scarto)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool scarta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &scarta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:elettronica.Scarto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:elettronica.Scarto)
  return false;
#undef DO_
}

void Scarto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:elettronica.Scarto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool scarta = 1;
  if (this->scarta() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->scarta(), output);
  }

  // @@protoc_insertion_point(serialize_end:elettronica.Scarto)
}

::google::protobuf::uint8* Scarto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:elettronica.Scarto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool scarta = 1;
  if (this->scarta() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->scarta(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:elettronica.Scarto)
  return target;
}

size_t Scarto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:elettronica.Scarto)
  size_t total_size = 0;

  // bool scarta = 1;
  if (this->scarta() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Scarto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:elettronica.Scarto)
  GOOGLE_DCHECK_NE(&from, this);
  const Scarto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Scarto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:elettronica.Scarto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:elettronica.Scarto)
    MergeFrom(*source);
  }
}

void Scarto::MergeFrom(const Scarto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:elettronica.Scarto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.scarta() != 0) {
    set_scarta(from.scarta());
  }
}

void Scarto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:elettronica.Scarto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Scarto::CopyFrom(const Scarto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:elettronica.Scarto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Scarto::IsInitialized() const {
  return true;
}

void Scarto::Swap(Scarto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Scarto::InternalSwap(Scarto* other) {
  std::swap(scarta_, other->scarta_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Scarto::GetMetadata() const {
  protobuf_elettronica_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_elettronica_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Scarto

// bool scarta = 1;
void Scarto::clear_scarta() {
  scarta_ = false;
}
bool Scarto::scarta() const {
  // @@protoc_insertion_point(field_get:elettronica.Scarto.scarta)
  return scarta_;
}
void Scarto::set_scarta(bool value) {
  
  scarta_ = value;
  // @@protoc_insertion_point(field_set:elettronica.Scarto.scarta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace elettronica

// @@protoc_insertion_point(global_scope)
